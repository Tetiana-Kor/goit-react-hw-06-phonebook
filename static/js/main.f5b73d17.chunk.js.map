{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/actions.js","redux/reducer.js","redux/store.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container/Container.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","contacts","createReducer","actions","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","rootReducer","phonebookReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","resetName","resetNumber","className","s","form","onSubmit","event","preventDefault","includeName","reduce","acc","contact","includeNumber","alert","newContact","label","input","type","value","placeholder","onChange","currentTarget","pattern","btn","ContactList","list","map","item","button","onClick","onDeleteContact","Filter","target","Container","children","container","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,8B,mBCA7FD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,mBCA1DD,EAAOC,QAAU,CAAC,UAAY,+B,6OCGjBC,EAAaC,YAAa,gBAAgB,SAACC,EAAMC,GAAP,MAAmB,CACxEC,QAAS,CACPC,GAAIC,IAAQC,WACZL,OACAC,cAISK,EAAgBP,YAAa,mBAC7BQ,EAAeR,YAAa,yBCPnCS,EAAWC,YACf,CACE,CAAEN,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEE,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,eALpB,mBAQzBS,GAAqB,SAACC,EAAD,OAAUT,EAAV,EAAUA,QAAV,4BAA4BS,GAA5B,CAAmCT,OAR/B,cASzBQ,GAAwB,SAACC,EAAD,OAAUT,EAAV,EAAUA,QAAV,OACvBS,EAAMC,QAAO,qBAAGT,KAAgBD,QAVR,IAcxBU,EAASH,YAAc,GAAD,eACzBC,GAAuB,SAACG,EAAD,YAAMX,YAGjBY,cAAgB,CAC7BN,WACAI,WCNIG,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAgB,CACpBC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGRC,EAAchB,YAAgB,CAClCN,SAAUuB,IAGNC,EAAmBC,YAAeP,EAAeI,GAE1CI,EAAQC,YAAe,CAClCC,QAASJ,EACTjB,aACAsB,UAAUC,IAGCC,EAAYC,YAAaN,G,gBC/CzBO,EAAc,SAAA9B,GAAK,OAAIA,EAAMH,SAASA,UACtCkC,EAAY,SAAA/B,GAAK,OAAIA,EAAMH,SAASI,QAEpC+B,EAAqB,SAAAhC,GAChC,IAAMH,EAAWiC,EAAY9B,GAEvBiC,EADSF,EAAU/B,GACOkC,cAEhC,OAAOrC,EAASI,QAAO,qBAAGZ,KACnB6C,cAAcC,SAASF,O,gBCFjB,SAASG,IACtB,IAAMvC,EAAWwC,YAAYP,GACvBQ,EAAWC,cAFmB,EAIZC,mBAAS,IAJG,mBAI7BnD,EAJ6B,KAIvBoD,EAJuB,OAKRD,mBAAS,IALD,mBAK7BlD,EAL6B,KAKrBoD,EALqB,KAmD9BC,EAAY,WAChBF,EAAQ,KAEJG,EAAc,WAClBF,EAAU,KAGZ,OACE,uBAAMG,UAAWC,IAAEC,KAAMC,SApBN,SAAAC,GACnBA,EAAMC,iBACNP,IACAC,IAnCiB,WACjB,IAAMO,EAActD,EAASuD,QAC3B,SAACC,EAAKC,GAAN,4BAAsBD,GAAtB,CAA2BC,EAAQjE,SACnC,IAEIkE,EAAgB1D,EAASuD,QAC7B,SAACC,EAAKC,GAAN,4BAAsBD,GAAtB,CAA2BC,EAAQhE,WACnC,IAGF,MAAa,KAATD,GAA0B,KAAXC,GACjBkE,MAAM,6BACC,GAGLL,EAAYhB,SAAS9C,IACvBmE,MAAM,GAAD,OAAInE,EAAJ,6BACE,GACEkE,EAAcpB,SAAS7C,IAChCkE,MAAM,GAAD,OAAIlE,EAAJ,6BACE,QAFF,EAmBHmE,IAIJnB,EAASvC,EAAmBV,EAAMC,KAWlC,UACE,wBAAOuD,UAAWC,IAAEY,MAApB,iBAEE,uBACEb,UAAWC,IAAEa,MACbC,KAAK,OACLvE,KAAK,OACLwE,MAAOxE,EACPyE,YAAY,gBACZC,SArCiB,SAAAd,GACvBR,EAAQQ,EAAMe,cAAcH,aAwC1B,wBAAOhB,UAAWC,IAAEY,MAApB,mBAEE,uBACEb,UAAWC,IAAEa,MACbC,KAAK,MACLvE,KAAK,SACLwE,MAAOvE,EACPwE,YAAY,YACZC,SA7CmB,SAAAd,GACzBP,EAAUO,EAAMe,cAAcH,QA6CxBI,QAAQ,kCAGZ,wBAAQpB,UAAWC,IAAEoB,IAAKN,KAAK,SAA/B,4B,qBCpFS,SAASO,IACtB,IAAMtE,EAAWwC,YAAYL,GACvBM,EAAWC,cAIjB,OACE,oBAAIM,UAAWC,IAAEsB,KAAjB,SACGvE,EAASwE,KAAI,gBAAGhF,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQE,EAAjB,EAAiBA,GAAjB,OACZ,qBAAaqD,UAAWC,IAAEwB,KAA1B,UACGjF,EADH,KACWC,EACT,wBACEuD,UAAWC,IAAEyB,OACbX,KAAK,SACLY,QAAS,kBAVK,SAAAhF,GAAE,OAAI8C,EAASvC,EAAsBP,IAUpCiF,CAAgBjF,IAHjC,sBAFOA,Q,qBCVF,SAASkF,IACtB,IAAMb,EAAQxB,YAAYN,GACpBO,EAAWC,cAIjB,OACE,mCACE,wBAAOM,UAAWC,IAAE7C,OAApB,kCAEE,uBACE4C,UAAWC,IAAEa,MACbC,KAAK,OACLC,MAAOA,EACPE,SAVS,SAAAd,GAAK,OAAIX,EAASvC,EAAqBkD,EAAM0B,OAAOd,gB,qBCJxDe,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKhC,UAAWC,IAAEgC,UAAlB,SAA8BD,K,MCmBxBE,MAdf,WACE,OACE,eAAC,EAAD,WACE,oBAAIlC,UAAU,YAAd,uBACA,cAACT,EAAD,IAEA,oBAAIS,UAAU,WAAd,sBACA,cAAC6B,EAAD,IAEA,cAACP,EAAD,QCRNa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU3D,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAa4D,QAAS,KAAMvD,UAAWA,EAAvC,SACE,cAAC,EAAD,UAINwD,SAASC,eAAe,U,kBChB1BpG,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,IAAM,4B","file":"static/js/main.f5b73d17.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2xcSB\",\"item\":\"ContactList_item__SLEr7\",\"button\":\"ContactList_button__26P-M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2m0Vb\",\"input\":\"Filter_input__1gNiz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3nZMT\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\n//TOOLKIT - 2\nexport const addContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nexport const deleteContact = createAction('contacts/delete');\nexport const changeFilter = createAction('contacts/changeFilter');\n\n// REDUX - 1\n// import * as actionTypes from './types';\n\n// export const addContact = (name, number) => ({\n//   type: actionTypes.ADD_CONTACT,\n//   payload: {\n//     id: shortid.generate(),\n//     name,\n//     number,\n//   },\n// });\n\n// export const deleteContact = contactId => ({\n//   type: actionTypes.DELETE_CONTACT,\n//   payload: contactId,\n// });\n\n// export const changeFilter = value => ({\n//   type: actionTypes.CHANGE_FILTER,\n//   payload: value,\n// });\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n// import { configureStore } from '@reduxjs/toolkit';\nimport * as actions from './actions';\n\n//TOOLKIT - 2\nconst contacts = createReducer(\n  [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  {\n    [actions.addContact]: (state, { payload }) => [...state, payload],\n    [actions.deleteContact]: (state, { payload }) =>\n      state.filter(({ id }) => id !== payload),\n  },\n);\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n\n//REDUX - 1\n// import * as actionTypes from './types';\n\n// const contacts = (\n//   state = [\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//   ],\n//   { type, payload },\n// ) => {\n//   switch (type) {\n//     case actionTypes.ADD_CONTACT:\n//       return [...state, payload];\n\n//     case actionTypes.DELETE_CONTACT:\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport phonebookReducer from './reducer';\n\n//TOOLKIT - 2\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst rootReducer = combineReducers({\n  contacts: phonebookReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n\n//Redux - 1\n// import { combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension'; //Redux - 1\n\n// const rootReducer = combineReducers({\n//   contacts: phonebookReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// export default store;\n","export const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../redux/actions';\nimport { getContacts } from '../../redux/selectors';\nimport s from './ContactForm.module.css';\n\n//TOOLKIT - 2\nexport default function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const newContact = () => {\n    const includeName = contacts.reduce(\n      (acc, contact) => [...acc, contact.name],\n      [],\n    );\n    const includeNumber = contacts.reduce(\n      (acc, contact) => [...acc, contact.number],\n      [],\n    );\n\n    if (name === '' || number === '') {\n      alert('Please enter all fields!');\n      return true;\n    }\n\n    if (includeName.includes(name)) {\n      alert(`${name} is already in contacts`);\n      return true;\n    } else if (includeNumber.includes(number)) {\n      alert(`${number} is already in contacts`);\n      return true;\n    }\n  };\n\n  const handleChangeName = event => {\n    setName(event.currentTarget.value);\n  };\n\n  const handleChangeNumber = event => {\n    setNumber(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    resetName();\n    resetNumber();\n\n    if (newContact()) {\n      return;\n    }\n\n    dispatch(actions.addContact(name, number));\n  };\n\n  const resetName = () => {\n    setName('');\n  };\n  const resetNumber = () => {\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Eden Clements\"\n          onChange={handleChangeName}\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"000-00-00\"\n          onChange={handleChangeNumber}\n          pattern=\"[0-7]{3}-[0-7]{2}-[0-7]{2}\"\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// REDUX - 1\n// const mapStateToProps = state => ({\n//   contacts: state.contacts.contacts,\n// });\n\n// const mapToDispatchToProps = dispatch => ({\n//   onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\n// });\n\n// export default connect(mapStateToProps, mapToDispatchToProps)(ContactForm);\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../redux/actions';\nimport { getVisibleContacts } from '../../redux/selectors';\nimport s from './ContactList.module.css';\n\n//TOOLKIT - 2\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(actions.deleteContact(id));\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ name, number, id }) => (\n        <li key={id} className={s.item}>\n          {name}: {number}\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\n//REDUX - 1\n// import { connect } from 'react-redux';\n\n// const getVisibleContacts = (allContacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return allContacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\n// const mapStateToProps = ({ contacts: { contacts, filter } }) => ({\n//   contacts: getVisibleContacts(contacts, filter),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onDeleteContact: id => dispatch(actions.deleteContact(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/selectors';\nimport * as actions from '../../redux/actions';\n\n//TOOLKIT - 2\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = event => dispatch(actions.changeFilter(event.target.value));\n\n  return (\n    <>\n      <label className={s.filter}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </>\n  );\n}\n\n//REDUX - 1\n// import { connect } from 'react-redux';\n\n// const mapStateToProps = state => ({\n//   value: state.contacts.filter,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onChange: event => dispatch(actions.changeFilter(event.target.value)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import React from 'react';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport Container from './components/Container/Container';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Container>\n      <h1 className=\"phonebook\">Phonebook</h1>\n      <ContactForm />\n\n      <h2 className=\"contacts\">Contacts</h2>\n      <Filter />\n\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n\n// function useLocalStorage(key, defaultValue) {\n//   const [state, setState] = useState(() => {\n//     return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n//   });\n\n//   useEffect(() => {\n//     window.localStorage.setItem(key, JSON.stringify(state));\n//   }, [key, state]);\n\n//   return [state, setState];\n// }\n\n// const [contacts, setContacts] = useLocalStorage('contacts', [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ]);\n\n// const [filter, setFilter] = useState('');\n\n// const addContact = (name, number) => {\n//   const item = {\n//     id: shortid.generate(),\n//     name,\n//     number,\n//   };\n\n//   const includeName = contacts.reduce(\n//     (acc, contact) => [...acc, contact.name],\n//     [],\n//   );\n//   const includeNumber = contacts.reduce(\n//     (acc, contact) => [...acc, contact.number],\n//     [],\n//   );\n\n//   if (name === '' || number === '') {\n//     alert('Please enter all fields!');\n//     return;\n//   }\n\n//   if (includeName.includes(name)) {\n//     alert(`${name} is already in contacts`);\n//     return;\n//   } else if (includeNumber.includes(number)) {\n//     alert(`${number} is already in contacts`);\n//   } else {\n//     setContacts(contacts => [item, ...contacts]);\n//   }\n// };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1sCl_\",\"label\":\"ContactForm_label__vexgZ\",\"input\":\"ContactForm_input__iXfWE\",\"btn\":\"ContactForm_btn__a-3dW\"};"],"sourceRoot":""}